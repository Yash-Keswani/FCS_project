# Generated by Django 4.1.1 on 2022-10-27 17:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.TextField(choices=[('patient', 'Patient'), ('doctor', 'Doctor'), ('hospital', 'Hospital'), ('pharmacy', 'Pharmacy'), ('insurance', 'Insurance')], null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_file', models.FileField(upload_to='uploads/documents')),
                ('filename', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('approved', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='medimode.profile')),
                ('contact_number', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(10000000), django.core.validators.MaxValueValidator(9999999999)])),
                ('image0', models.ImageField(upload_to='uploads/images/')),
                ('image1', models.ImageField(upload_to='uploads/images/')),
                ('location', models.TextField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
            bases=('medimode.profile',),
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='medimode.profile')),
                ('contact_number', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(10000000), django.core.validators.MaxValueValidator(9999999999)])),
                ('image0', models.ImageField(upload_to='uploads/images/')),
                ('image1', models.ImageField(upload_to='uploads/images/')),
                ('location', models.TextField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Insurance Firms',
            },
            bases=('medimode.profile',),
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='medimode.profile')),
                ('contact_number', models.BigIntegerField(validators=[django.core.validators.MinValueValidator(10000000), django.core.validators.MaxValueValidator(9999999999)])),
                ('image0', models.ImageField(upload_to='uploads/images/')),
                ('image1', models.ImageField(upload_to='uploads/images/')),
                ('location', models.TextField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Pharmacies',
            },
            bases=('medimode.profile',),
        ),
        migrations.CreateModel(
            name='Shareable',
            fields=[
                ('document_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='medimode.document')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='owned_shareables', to='medimode.profile')),
                ('shared_with', models.ManyToManyField(related_name='can_access', to='medimode.profile')),
            ],
            bases=('medimode.document',),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.SmallIntegerField()),
                ('description', models.TextField(max_length=1024)),
                ('completed', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='received_transactions', to='medimode.profile')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sent_transactions', to='medimode.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket_Shareable',
            fields=[
                ('shareable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='medimode.shareable')),
                ('party', models.TextField(choices=[('Issuer', 'Issuer'), ('Issued', 'Issued')])),
            ],
            bases=('medimode.shareable',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='medimode.profile')),
                ('medical_info', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner_patient', to='medimode.document')),
                ('proof_of_address', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='poa_%(class)s', to='medimode.document')),
                ('proof_of_identity', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='poi_%(class)s', to='medimode.document')),
            ],
            options={
                'abstract': False,
            },
            bases=('medimode.profile',),
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('profile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='medimode.profile')),
                ('medical_license', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='owner_doctor', to='medimode.document')),
                ('proof_of_address', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='poa_%(class)s', to='medimode.document')),
                ('proof_of_identity', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='poi_%(class)s', to='medimode.document')),
            ],
            options={
                'abstract': False,
            },
            bases=('medimode.profile',),
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=32000)),
                ('issued', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='accepted_tickets', to='medimode.profile')),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='issued_tickets', to='medimode.profile')),
                ('transaction', models.OneToOneField(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='ticket', to='medimode.transaction')),
                ('shareables', models.ManyToManyField(related_name='owner_ticket', to='medimode.ticket_shareable')),
            ],
        ),
    ]
